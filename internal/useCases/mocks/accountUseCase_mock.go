// Code generated by MockGen. DO NOT EDIT.
// Source: ./accountUseCase.go

// Package mock_useCases is a generated GoMock package.
package mock_useCases

import (
	entities "digibank/internal/domain/entities"
	dto "digibank/internal/interfaceAdapters/dto"
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockAccountUseCase is a mock of AccountUseCase interface.
type MockAccountUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockAccountUseCaseMockRecorder
}

// MockAccountUseCaseMockRecorder is the mock recorder for MockAccountUseCase.
type MockAccountUseCaseMockRecorder struct {
	mock *MockAccountUseCase
}

// NewMockAccountUseCase creates a new mock instance.
func NewMockAccountUseCase(ctrl *gomock.Controller) *MockAccountUseCase {
	mock := &MockAccountUseCase{ctrl: ctrl}
	mock.recorder = &MockAccountUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountUseCase) EXPECT() *MockAccountUseCaseMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockAccountUseCase) CreateAccount(ctx *gin.Context, accountContent dto.CreateAccountInput) (entities.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", ctx, accountContent)
	ret0, _ := ret[0].(entities.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockAccountUseCaseMockRecorder) CreateAccount(ctx, accountContent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockAccountUseCase)(nil).CreateAccount), ctx, accountContent)
}

// GetAccount mocks base method.
func (m *MockAccountUseCase) GetAccount(ctx *gin.Context, accountID uint) (entities.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccount", ctx, accountID)
	ret0, _ := ret[0].(entities.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccount indicates an expected call of GetAccount.
func (mr *MockAccountUseCaseMockRecorder) GetAccount(ctx, accountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccount", reflect.TypeOf((*MockAccountUseCase)(nil).GetAccount), ctx, accountID)
}
