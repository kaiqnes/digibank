// Code generated by MockGen. DO NOT EDIT.
// Source: ./errorPresenter.go

// Package mock_presenters is a generated GoMock package.
package mock_presenters

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockErrorPresenter is a mock of ErrorPresenter interface.
type MockErrorPresenter struct {
	ctrl     *gomock.Controller
	recorder *MockErrorPresenterMockRecorder
}

// MockErrorPresenterMockRecorder is the mock recorder for MockErrorPresenter.
type MockErrorPresenterMockRecorder struct {
	mock *MockErrorPresenter
}

// NewMockErrorPresenter creates a new mock instance.
func NewMockErrorPresenter(ctrl *gomock.Controller) *MockErrorPresenter {
	mock := &MockErrorPresenter{ctrl: ctrl}
	mock.recorder = &MockErrorPresenterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockErrorPresenter) EXPECT() *MockErrorPresenterMockRecorder {
	return m.recorder
}

// PresentError mocks base method.
func (m *MockErrorPresenter) PresentError(ctx *gin.Context, err error, statusCode int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PresentError", ctx, err, statusCode)
}

// PresentError indicates an expected call of PresentError.
func (mr *MockErrorPresenterMockRecorder) PresentError(ctx, err, statusCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PresentError", reflect.TypeOf((*MockErrorPresenter)(nil).PresentError), ctx, err, statusCode)
}
